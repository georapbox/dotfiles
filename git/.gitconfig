[alias]
  # View the current working tree status using the long format
  st = status

  # View the current working tree status using the short format
  s = status -s

  # Show the diff between the latest commit and the current state
  d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

  # Show history of commits with graph
  hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short

  # Show history of commits as oneliner
  histoneline = log --pretty=oneline

  # Delete remote tags
  drtags = tag -l | xargs -n 1 git push --delete origin

  # Delete local tags
  dltags = tag | xargs git tag -d

  # Find branches containing commit
  fb = "!f() { git branch -a --contains $1; }; f"

  # Find tags containing commit
  ft = "!f() { git describe --always --contains $1; }; f"

  # Remove branches that have already been merged with master
  # a.k.a. ‘delete merged’
  dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

  # List contributors with number of commits
  contributors = shortlog --summary --numbered

  # Undo last commit
  uncommit = reset --mixed HEAD~1

  # Print current user
  user = !"git config user.name; git config user.email"

[pager]
  branch = false

[color]
  # Use colors in Git commands that are capable of colored output when
  # outputting to the terminal. (This is the default setting in Git ≥ 1.8.4.)
  ui = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold # line info
  old = red # deletions
  new = green # additions

[color "status"]
  added = green
  changed = cyan
  untracked = red

[core]
	editor = nano
  autocrlf = input

[rerere]
  enabled = true

# Include project specific .gitconfig
# Inside each direcotry (personal and work) create a .gitconfig file with the following content:
# [user]
#  name = <USER_NAME>
#  email = <USER_EMAIL>
[includeIf "gitdir:~/Projects/personal/"]
  path = ~/Projects/personal/.gitconfig

[includeIf "gitdir:~/Projects/work/"]
  path = ~/Projects/work/.gitconfig

[maintenance]
  # repo = /Users/<USERNAME>/Projects/personal/<PROJECT_NAME>